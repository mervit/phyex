{% extends 'base.html.twig' %}

{% block title %}Evaluations{% endblock %}

{% block body %}

    <h1 class="mt-3 h2">{{ 'Evaluation exercise'|trans }} {{ exercise.exerciseType.name }} {{ 'of figurant #'}}{{ exercise.figurant.id}} </h1>
    <div id="evaluation" class="row mt-3">
        <div class="col-12 col-md-9">
            <p>{{ exercise.exerciseType.description }}</p>
            <video id="videoFront" class="w-100 video">
                <source src="{{ '/' ~ relative_uploads_directory ~ 'videos/' ~ exercise.videoFront }}">
            </video>
            <video id="videoSide" class="w-100 video d-none">
                <source src="{{ '/' ~ relative_uploads_directory ~ 'videos/' ~ exercise.videoSide }}">
            </video>
            <video id="videoMidLeft" class="w-100 video d-none">
                <source src="{{ '/' ~ relative_uploads_directory ~ 'videos/' ~ exercise.videoMidLeft }}">
            </video>
            <video id="videoMidRight" class="w-100 video d-none">
                <source src="{{ '/' ~ relative_uploads_directory ~ 'videos/' ~ exercise.videoMidRight }}">
            </video>

            <div class="row">
                <div class="col-12 col-sm-2">
                    <a href="#" class="btn btn-light" id="play"><i class="bi bi-play"></i></a>
                    <span id="position">00:10</span> / <span id="duration">00:25</span>
                </div>
                <div class="col-12 col-sm-10">
                    <input class="form-range" type="range" value="0" id="scrub" max="25">
                </div>
            </div>

        </div>
        <div class="col-12 col-md-3">
            <h2 class="h3">{{ 'Camera views'|trans }}</h2>
            <div class="text-center views mb-3">
                <div class="row mb-2">
                    <div class="col-4"></div>
                    <div class="col-4"><i class="bi bi-universal-access"></i></div>
                    <div class="col-4"><a href="#" onclick="switchVideo('videoSide', this)" class="videoShowButton btn btn-light w-100"><i class="bi bi-arrow-left"></i></a></div>
                </div>
                <div class="row">
                    <div class="col-4"><a href="#" onclick="switchVideo('videoMidLeft', this)" class="videoShowButton btn btn-light w-100"><i class="bi bi-arrow-up-right"></i></a></div>
                    <div class="col-4"><a href="#" onclick="switchVideo('videoFront', this)" class="videoShowButton btn btn-light w-100 active"><i class="bi bi-arrow-up"></i></a></div>
                    <div class="col-4"><a href="#" onclick="switchVideo('videoMidRight', this)" class="videoShowButton btn btn-light w-100"><i class="bi bi-arrow-up-left"></i></a></div>
                </div>
            </div>
            <h2 class="h3">{{ 'Evaluation'|trans }}</h2>
            <div id="evaluationForm">
            {{ form(evaluationForm) }}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

    <script type="text/javascript">

        function areAllParametersFilled(){

            const enabledValues = ['1', '2', '3'];

            let params = document.querySelectorAll('[type="text"]');
            for( let i = 0; i < params.length; ++i){
                if(!enabledValues.includes(params[i].value)){
                    return false;
                }
            }
            return true;
        }

        var form = document.getElementsByTagName('form').item(0);
        form.querySelectorAll('[type="submit"]').item(0).setAttribute('disabled', true);
        form.addEventListener('submit', function (e) {
            if(!areAllParametersFilled()){
                e.preventDefault();
            }
        });

    </script>
    <script type="text/javascript">

        function changeStars(el, stars){

            var OneStar = el.getElementsByClassName('oneStar').item(0).getElementsByTagName('i').item(0),
                TwoStars = el.getElementsByClassName('twoStars').item(0).getElementsByTagName('i').item(0),
                ThreeStars = el.getElementsByClassName('threeStars').item(0).getElementsByTagName('i').item(0);

            switch (stars) {
                case 0:
                    OneStar.setAttribute('class', 'bi bi-star');
                    TwoStars.setAttribute('class', 'bi bi-star');
                    ThreeStars.setAttribute('class', 'bi bi-star');
                    break;
                case 1:
                    OneStar.setAttribute('class', 'bi bi-star-fill');
                    TwoStars.setAttribute('class', 'bi bi-star');
                    ThreeStars.setAttribute('class', 'bi bi-star');
                    break;
                case 2:
                    OneStar.setAttribute('class', 'bi bi-star-fill');
                    TwoStars.setAttribute('class', 'bi bi-star-fill');
                    ThreeStars.setAttribute('class', 'bi bi-star');
                    break;
                case 3:
                    OneStar.setAttribute('class', 'bi bi-star-fill');
                    TwoStars.setAttribute('class', 'bi bi-star-fill');
                    ThreeStars.setAttribute('class', 'bi bi-star-fill');
                    break;
            }

        }

        var inputForStars = document.getElementById('evaluationForm').getElementsByTagName('input');
        for (let e = 0; e < inputForStars.length; e++) {

            if( inputForStars[e].attributes.type.value != 'text'){
                continue;
            }

            inputForStars[e].parentNode.innerHTML = inputForStars[e].parentNode.innerHTML +
                '<div class="stars">' +
                '<a href="#" class="star oneStar" title="Bad"><i class="bi bi-star"></i></a>' +
                '<a href="#" class="star twoStars" title="OK"><i class="bi bi-star"></i></a>' +
                '<a href="#" class="star threeStars" title="Good"><i class="bi bi-star"></i></a>' +
                '</div>'
            ;
            inputForStars[e].classList.add('d-none');

            let oneStar = inputForStars[e].parentNode.getElementsByClassName('oneStar').item(0),
                twoStars = inputForStars[e].parentNode.getElementsByClassName('twoStars').item(0),
                threeStars = inputForStars[e].parentNode.getElementsByClassName('threeStars').item(0);

            // Tooltips
            $(oneStar).tooltip();
            $(twoStars).tooltip();
            $(threeStars).tooltip();

            oneStar.addEventListener('mouseover', function(){
                    changeStars(this.parentNode, 1);
            });
            oneStar.addEventListener('click', function(e){
                this.parentNode.parentNode.getElementsByTagName('input').item(0).value = 1;
                if(areAllParametersFilled()){
                    document.querySelectorAll('[type="submit"]').item(0).removeAttribute('disabled');
                }
                e.stopPropagation();
                e.preventDefault();
            });
            oneStar.addEventListener('mouseout', function(){
                changeStars(this.parentNode, parseInt(this.parentNode.parentNode.getElementsByTagName('input').item(0).value));
            });
            twoStars.addEventListener('mouseover', function(){
                changeStars(this.parentNode, 2);
            });
            twoStars.addEventListener('click', function(e){
                this.parentNode.parentNode.getElementsByTagName('input').item(0).value = 2;
                if(areAllParametersFilled()){
                    document.querySelectorAll('[type="submit"]').item(0).removeAttribute('disabled');
                }
                e.stopPropagation();
                e.preventDefault();
            });
            twoStars.addEventListener('mouseout', function(){
                changeStars(this.parentNode, parseInt(this.parentNode.parentNode.getElementsByTagName('input').item(0).value));
            });
            threeStars.addEventListener('mouseover', function(){
                changeStars(this.parentNode, 3);
            });
            threeStars.addEventListener('click', function(e){
                this.parentNode.parentNode.getElementsByTagName('input').item(0).value = 3;
                if(areAllParametersFilled()){
                    document.querySelectorAll('[type="submit"]').item(0).removeAttribute('disabled');
                }
                e.stopPropagation();
                e.preventDefault();
            });
            threeStars.addEventListener('mouseout', function(){
                changeStars(this.parentNode, parseInt(this.parentNode.parentNode.getElementsByTagName('input').item(0).value));
            });



        }

    </script>
    <script type="text/javascript">

        function switchVideo(videoName, e){

            var videos = document.getElementsByClassName('video');
            for (let i = 0; i < videos.length; i++) {
                videos[i].classList.add('d-none');
            }
            document.getElementById(videoName).classList.remove('d-none');

            var videoShowButtons = document.getElementsByClassName('videoShowButton');
            for (let i = 0; i < videoShowButtons.length; i++) {
                videoShowButtons[i].classList.remove('active');
            }

            e.classList.add('active');

            return false;

        }

        function addEvent(to, type, fn){
            if(document.addEventListener){
                to.addEventListener(type, fn, false);
            } else if(document.attachEvent){
                to.attachEvent('on'+type, fn);
            } else {
                to['on'+type] = fn;
            }
        }

        function asTime(t) {
            t = Math.round(t);
            var s = t % 60;
            var m = Math.round(t / 60);

            return two(m) + ':' + two(s);
        }

        function two(s) {
            s += "";
            if (s.length < 2) s = "0" + s;
            return s;
        }

        function seek() {
            scrub.value = videoSide.currentTime = videoMidLeft.currentTime = videoMidRight.currentTime = this.currentTime;
        }


        var videoFront = document.querySelector('#videoFront'),
            videoSide = document.querySelector('#videoSide'),
            videoMidLeft = document.querySelector('#videoMidLeft'),
            videoMidRight = document.querySelector('#videoMidRight'),

            togglePlay = document.querySelector('#play'),
            position = document.querySelector('#position'),
            ready = false,
            scrub = document.querySelector('#scrub');



        addEvent(togglePlay, 'click', function (e) {
            if (ready) {
                if (videoFront.paused) {
                    if (videoFront.ended) {
                        videoFront.currentTime = 0;
                        videoSide.currentTime = 0;
                        videoMidLeft.currentTime = 0;
                        videoMidRight.currentTime = 0;
                    }
                    videoSide.currentTime = videoFront.currentTime;
                    videoMidLeft.currentTime = videoFront.currentTime;
                    videoMidRight.currentTime = videoFront.currentTime;
                    videoFront.play();
                    this.innerHTML = '<i class="bi bi-pause"></i>';
                } else {
                    videoFront.pause();
                    this.innerHTML = '<i class="bi bi-play"></i>';
                }
            }
            e.stopPropagation();
            e.preventDefault();
        });

        addEvent(videoFront, 'seeking', seek);
        addEvent(videoFront, 'seeked', seek);

        addEvent(videoFront, 'play', function () {
            videoSide.play();
            videoMidLeft.play();
            videoMidRight.play();
        });

        addEvent(videoFront, 'pause', function () {
            videoSide.pause();
            videoMidLeft.pause();
            videoMidRight.pause();
        })

        addEvent(videoFront, 'timeupdate', function () {
            position.innerHTML = asTime(this.currentTime);
            scrub.value = this.currentTime;
        });

        addEvent(videoFront, 'ended', function () {
            //togglePlay.value = "play";
            this.currentTime = 0;
            this.play();
        });

        addEvent(videoFront, 'canplay', function () {
            videoFront.muted = true;
            ready = true;
            document.querySelector('#duration').innerHTML = asTime(this.duration);

            scrub.setAttribute('max', this.duration);
            addEvent(scrub, 'change', function () {
                videoFront.currentTime = this.value;
                videoSide.currentTime = this.value;
                videoMidLeft.currentTime = this.value;
                videoMidRight.currentTime = this.value;
            });
        });
        addEvent(videoFront, 'loadeddata', function () {
            videoFront.play();
            togglePlay.innerHTML = '<i class="bi bi-pause"></i>';
        });

    </script>

{% endblock %}
