{% extends 'base.html.twig' %}

{% block title %}{% if exerciseType is defined %}{{ 'Edit exercise type'|trans }} #{{ exerciseType.id }}{% else %}{{ 'New exercise type'|trans }}{% endif %}{% endblock %}

{% block body %}
    <h1 class="mt-3 h2">{% if exerciseType is defined %}{{ 'Edit exercise type'|trans }} #{{ exerciseType.id }}{% else %}{{ 'New exercise type'|trans }}{% endif %}</h1>
    {{ form_start(form) }}
    <div class="row">
        <div class="col-md-6">
            <h2 class="mt-3 h3">{{ 'Basic info'|trans }}</h2>
            {{ form_row(form.name) }}
            {{ form_row(form.code) }}
            {{ form_row(form.description) }}
            {{ form_row(form.defaultVideoView) }}
        </div>
        <div class="col-md-6">
            <h2 class="mt-3 h3">{{ 'Instruction video'|trans }}</h2>
            {{ form_widget(form.instructionVideo) }}
            <h2 class="mt-3 h3">{{ 'Params'|trans }}</h2>
            <ul class="list-unstyled params"
                data-index="{{ form.exerciseTypeParams|length > 0 ? form.exerciseTypeParams|last.vars.name + 1 : 0 }}"
                data-prototype="{{ form_widget(form.exerciseTypeParams.vars.prototype)|e('html_attr') }}">
                {% for p in form.exerciseTypeParams %}
                    <li>{{ form_row(p.name) }}</li>
                {% endfor %}
            </ul>
            <button type="button" class="add_item_link btn btn-success" data-collection-holder-class="params"><i class="bi bi-plus"></i> Add a param</button>
        </div>
    </div>

    {{ form_row(form.submit) }}

    {{ form_end(form) }}

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script type="text/javascript">

        const addParamFormDeleteLink = (item) => {
            const removeFormButton = document.createElement('button');
            removeFormButton.classList.add('btn');
            removeFormButton.classList.add('btn-sm');
            removeFormButton.classList.add('btn-danger');
            removeFormButton.innerHTML = '<i class="bi bi-x"></i>';

            item.getElementsByTagName('div').item(0).getElementsByTagName('div').item(0).classList.add('input-group');
            item.getElementsByTagName('div').item(0).getElementsByTagName('div').item(0).append(removeFormButton);

            removeFormButton.addEventListener('click', (e) => {
                e.preventDefault();
                // remove the li for the tag form
                item.remove();
            });
        }

        const addFormToCollection = (e) => {
            const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);

            const item = document.createElement('li');

            item.innerHTML = collectionHolder
                .dataset
                .prototype
                .replace(
                    /__name__/g,
                    collectionHolder.dataset.index
                );

            collectionHolder.appendChild(item);

            collectionHolder.dataset.index++;

            addParamFormDeleteLink(item);
        };

        document
            .querySelectorAll('.add_item_link')
            .forEach(btn => {
                btn.addEventListener("click", addFormToCollection)
            });

        document
            .querySelectorAll('ul.params li')
            .forEach((param) => {
                addParamFormDeleteLink(param)
            })
    </script>

{% endblock %}